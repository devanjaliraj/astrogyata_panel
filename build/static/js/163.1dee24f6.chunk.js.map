{"version":3,"sources":["views/apps/about/AllaboutUs.js"],"names":["i","AllaboutUs","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","cellRendererFramework","params","className","data","desc","pinned","window","innerWidth","render","history","size","color","onClick","push","_id","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","this","Fragment","col-sm-6","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/163.1dee24f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  // CardTitle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n// import { history } from \"../../../history\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown,  Edit } from \"react-feather\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass AllaboutUs extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n   \r\n      {\r\n        headerName: \"Descriptions\",\r\n        field: \"desc\",\r\n        width: 600,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.desc}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"userverified\",\r\n      //   // filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Active\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.userverified}\r\n      //       </div>\r\n      //     ) : params.value === \"Inactive\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.userverified}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        pinned: window.innerWidth > 992 ? \"right\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        \r\n                        `/app/about/EditAboutUs/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n\r\n              {/* <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              /> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"/admin/allabout\").then((response) => {\r\n      const rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig\r\n      .get(`/admin/deleteabout/${id}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n         {/* <Breadcrumbs\r\n          breadCrumbTitle=\"AboutUs List\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"AboutUs List\"\r\n        /> */}\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n        <Row className=\"m-1\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n              AboutUs List\r\n              </h1>\r\n            </Col>\r\n          </Row>\r\n            <Col className=\"pt-4\">\r\n                {/* <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-success float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/about/AboutUs\")}\r\n                  >\r\n                    Add Aboutus\r\n                    </Button>\r\n                )}\r\n              /> */}\r\n\r\n            </Col>\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default AllaboutUs;\r\n"],"sourceRoot":""}