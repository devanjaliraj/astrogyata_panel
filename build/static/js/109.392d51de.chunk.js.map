{"version":3,"sources":["views/apps/termscondition/AddTermsCondition.js"],"names":["AddTermsCondition","props","onEditorStateChange","editorState","setState","desc","convertToRaw","getCurrentContent","submitHandler","e","preventDefault","FormData","append","state","axiosConfig","post","then","response","console","log","history","push","swal","catch","error","dealer","EditorState","createEmpty","className","col-sm-6","onClick","onSubmit","this","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","color","React","Component"],"mappings":"gXAWMA,EAAiB,kDACrB,WAAYC,GAAQ,IAAD,EAOf,OAPe,qBACjB,cAAMA,IASRC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZD,cACAE,KAAOC,uBAAaH,EAAYI,wBAElC,EAEFC,cAAgB,SAACC,GACfA,EAAEC,kBAEW,IAAIC,UACZC,OAAO,OAAQ,EAAKC,MAAMR,MAE/BS,IACGC,KAAK,4BAA6B,EAAKF,OACvCG,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKhB,MAAMmB,QAAQC,KAAK,yCAExBC,IAAK,YAAa,0BAA2B,cAG9CC,OAAM,SAACC,GACNN,QAAQC,IAAIK,OA/BhB,EAAKX,MAAQ,CAEXY,OAAQ,GACRpB,KAAM,GACNF,YAAauB,cAAYC,eACzB,EAqGH,OApGA,mCA+BD,WACE,OACE,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACC,UAAU,OACf,kBAAC,IAAG,KACA,wBAAIC,YAAA,EAASD,UAAU,cAAY,2BAIrC,kBAAC,IAAG,KACF,kBAAC,IAAM,CACLA,UAAU,8BACVE,QAAS,kBAAKV,IAAQC,KAAK,2CAC1B,UAMP,kBAAC,IAAQ,KACP,kBAAC,IAAI,CAACU,SAAUC,KAAKxB,eAUnB,kBAAC,SAAM,CACLyB,iBAAiB,wBACjBC,iBAAiB,eACjBC,gBAAgB,cAChBhC,YAAa6B,KAAKnB,MAAMV,YACxBD,oBAAqB8B,KAAK9B,oBAC1BkC,QAAS,CACPC,QAAS,CAAC,SAAU,YAAa,WAAY,cAC7CC,OAAQ,CACND,QAAS,CACP,OACA,SACA,YACA,gBACA,aAEFE,KAAM,CAAEX,UAAW,6BACnBY,OAAQ,CAAEZ,UAAW,6BACrBa,UAAW,CAAEb,UAAW,6BACxBc,cAAe,CAAEd,UAAW,6BAC5Be,KAAM,CAAEf,UAAW,8BAErBgB,UAAW,CACThB,UAAW,6BAEbiB,SAAU,CACRjB,UAAW,6BAEbkB,WAAY,CACVlB,UAAW,gCAIjB,6BACA,kBAAC,IAAM,CAACmB,MAAM,WAAS,kBAKhC,EA7GoB,CAASC,IAAMC,WA+GvBjD,a","file":"static/js/109.392d51de.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, Col, Row, Form, Button } from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport swal from 'sweetalert';\r\n\r\nclass AddTermsCondition extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n      dealer: \"\",\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: (convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData();\r\n    data.append(\"desc\", this.state.desc);\r\n\r\n    axiosConfig\r\n      .post(\"/admin/add_termscondition\", this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/app/termscondition/TermConditionList\");\r\n        // alert(\"Privacy Policy Added Successfully !\");\r\n        swal(\"Good job!\", \"You clicked the button!\", \"success\");\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    // this.state.editorState.getCurrentContent().getPlainText();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Row className=\"m-2\">\r\n        <Col>\r\n            <h1 col-sm-6 className=\"float-left\">\r\n              Add Term And Condition \r\n            </h1>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              className=\" btn btn-danger float-right\"\r\n              onClick={() =>history.push(\"/app/termscondition/TermConditionList\")\r\n              }\r\n            >\r\n              Back\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <CardBody>\r\n          <Form onSubmit={this.submitHandler}>\r\n\r\n          {/* <Editor\r\n  editorState={this.state.editorState}\r\n  toolbarClassName=\"toolbarClassName\"\r\n  wrapperClassName=\"wrapperClassName\"\r\n  editorClassName=\"editorClassName\"\r\n  onEditorStateChange={this.onEditorStateChange}\r\n/>; */}\r\n\r\n            <Editor\r\n              toolbarClassName=\"demo-toolbar-absolute\"\r\n              wrapperClassName=\"demo-wrapper\"\r\n              editorClassName=\"demo-editor\"\r\n              editorState={this.state.editorState}\r\n              onEditorStateChange={this.onEditorStateChange}\r\n              toolbar={{\r\n                options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n                inline: {\r\n                  options: [\r\n                    \"bold\",\r\n                    \"italic\",\r\n                    \"underline\",\r\n                    \"strikethrough\",\r\n                    \"monospace\",\r\n                  ],\r\n                  bold: { className: \"bordered-option-classname\" },\r\n                  italic: { className: \"bordered-option-classname\" },\r\n                  underline: { className: \"bordered-option-classname\" },\r\n                  strikethrough: { className: \"bordered-option-classname\" },\r\n                  code: { className: \"bordered-option-classname\" },\r\n                },\r\n                blockType: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontSize: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n                fontFamily: {\r\n                  className: \"bordered-option-classname\",\r\n                },\r\n              }}\r\n            />\r\n            <br/>\r\n            <Button color=\"primary\"> Submit</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default AddTermsCondition;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Row,\r\n//   Col,\r\n//   Form,\r\n//   Label,\r\n//   Input,\r\n//   Button,\r\n// } from \"reactstrap\";\r\n// import axiosConfig from \"../../../axiosConfig\";\r\n// // import swal from \"sweetalert\";\r\n// import { Route } from \"react-router-dom\";\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n// // import Textarea from \"../../forms/form-elements/textarea/Textarea\";\r\n\r\n// class AddTermsCondition extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n\r\n//         dealer: \"\",\r\n//         desc: \"\",\r\n\r\n\r\n//     };\r\n//     this.state = {\r\n//       dealerN: [],\r\n//     };\r\n//   }\r\n\r\n//   async componentDidMount() {\r\n//     //dealer List\r\n//     axiosConfig\r\n//       .get(\"/dealer/alldealers\")\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//         this.setState({ dealerN: response.data.data });\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   }\r\n\r\n//   changeHandler1 = (e) => {\r\n//     this.setState({ status: e.target.value });\r\n//   };\r\n//   changeHandler = (e) => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n//   submitHandler = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     axiosConfig\r\n//       .post(\"/admin/add_termscondition\", this.state,\r\n      \r\n//       )\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//         // swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n//         this.props.history.push(\"/app/termscondition/TermConditionList\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   };\r\n\r\n\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//       <Breadcrumbs\r\n//         breadCrumbTitle=\"Terms And Condition\"\r\n//         breadCrumbParent=\"Home\"\r\n//         breadCrumbActive=\"Terms And Condition\"\r\n//       />\r\n//       <Card>\r\n//         <Row className=\"m-2\">\r\n//           <Col>\r\n//             <h1 col-sm-6 className=\"float-left\">\r\n//               Terms And Condition\r\n//             </h1>\r\n//           </Col>\r\n//           <Col>\r\n//             <Route\r\n//               render={({ history }) => (\r\n//                 <Button\r\n//                   className=\" btn btn-danger float-right\"\r\n//                   onClick={() =>\r\n//                     history.push(\"/app/termscondition/TermConditionList\")\r\n//                   }\r\n//                 >\r\n//                   Back\r\n//                 </Button>\r\n//               )}\r\n//             />\r\n//           </Col>\r\n//         </Row>\r\n//         <CardBody>\r\n//           <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n//             <Row>\r\n             \r\n//               <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n//                 <Label>Descriptions</Label>\r\n//                 <Input\r\n//                     type=\"textarea\"\r\n//                     name=\"desc\"\r\n//                     value={this.state.desc}\r\n//                     onChange={this.changeHandler}\r\n//                     rows=\"3\"\r\n//                     placeholder=\"Textarea\"\r\n//                   />\r\n//               </Col>\r\n\r\n//             </Row>\r\n\r\n//             <Row>\r\n//               <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n//                 <Button.Ripple\r\n//                   color=\"primary\"\r\n//                   type=\"submit\"\r\n//                   className=\"mr-1 mb-1\"\r\n//                 >\r\n//                   Submit\r\n//                 </Button.Ripple>\r\n//               </Col>\r\n//             </Row>\r\n//           </Form>\r\n//         </CardBody>\r\n//       </Card>\r\n//      </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default AddTermsCondition\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}