{"version":3,"sources":["views/apps/askquestion/UserAskQuesList.js"],"names":["i","UserAskQuesList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","userid","fullname","className","mobile","dob","question","answer","status","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","astroId","localStorage","getItem","axiosConfig","get","then","response","console","log","id","error","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":";0aACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAqB2E,IAErEC,EAAe,iKA+MlB,OA/MkB,oCACnBC,MAAQ,CACNC,QAAS,GACTC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACbC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAEhBC,WAAY,CACV,CACEC,WAAY,OACZC,YAAa,oBACbC,MAAO,oBACPC,MAAO,IACPC,QAAQ,GAMV,CACEJ,WAAY,OACZE,MAAO,WACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OACE,6BACE,8BAAyB,QAAzB,EAAOA,EAAOC,KAAKC,cAAM,aAAlB,EAAoBC,aAMnC,CACET,WAAY,aACZE,MAAO,SACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OACE,yBAAKI,UAAU,4CACb,8BAAyB,QAAzB,EAAOJ,EAAOC,KAAKC,cAAM,aAAlB,EAAoBG,WAKnC,CACEX,WAAY,MACZE,MAAO,MACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GAAY,IAAD,EACjC,OACE,yBAAKI,UAAU,4CACb,8BAAyB,QAAzB,EAAOJ,EAAOC,KAAKC,cAAM,aAAlB,EAAoBI,QAMnC,CACEZ,WAAY,gBACZE,MAAO,WACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,yBAAKI,UAAU,4CACb,8BAAOJ,EAAOC,KAAKM,aAK3B,CACEb,WAAY,sBACZE,MAAO,SACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,6BACE,8BAAOA,EAAOC,KAAKO,WAM3B,CACEd,WAAY,SACZE,MAAO,SACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,6BACE,8BAAOA,EAAOC,KAAKQ,WAM3B,CACEf,WAAY,UACZE,MAAO,YACPC,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,yBAAKI,UAAU,0BACb,kBAAC,IAAK,CACJM,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAG,CACFP,UAAU,QACVQ,KAAK,OACLC,MAAM,QACNC,QAAS,kBACPH,EAAQI,KAAK,oCAAD,OAC0Bf,EAAOC,KAAKe,YAM1D,kBAAC,IAAK,CACJN,OAAQ,gBAAGC,EAAO,EAAPA,QAAO,OAChB,kBAAC,IAAY,CACXP,UAAU,QACVQ,KAAK,OACLC,MAAM,OACNC,QAAS,kBACPH,EAAQI,KAAK,sCAAD,OAC4Bf,EAAOC,KAAKe,YAM5D,kBAAC,IAAM,CACLZ,UAAU,QACVQ,KAAK,OACLC,MAAM,MACNC,QAAS,WACP,IAAIG,EAAe,EAAKC,QAAQC,kBAChC,EAAKC,gBAAgBpB,EAAOC,KAAKe,KACjC,EAAKE,QAAQG,cAAc,CAAEC,OAAQL,YAQpD,EA+BDM,YAAc,SAACvB,GACb,EAAKkB,QAAUlB,EAAOwB,IACtB,EAAKC,cAAgBzB,EAAO0B,UAC5B,EAAKC,SAAS,CACZzC,eAAgB,EAAKgC,QAAQU,2BAA6B,EAC1DzC,YAAa,EAAK+B,QAAQW,wBAC1BC,WAAY,EAAKZ,QAAQa,6BAE5B,EACDC,kBAAoB,SAACC,GACnB,EAAKf,QAAQgB,eAAeD,IAC7B,EACDE,WAAa,SAACF,GACR,EAAKf,UACP,EAAKA,QAAQkB,sBAAsBC,OAAOJ,IAC1C,EAAKN,SAAS,CACZzC,eAAgB+C,EAChB9C,YAAa8C,MAGlB,EAwIA,OAxIA,qFAjDD,2FAK+C,OAAzCK,EAAUC,aAAaC,QAAQ,WAAU,SAEvCC,IAEHC,IAAI,sBAAD,OAAuBJ,EAAO,8BAEjCK,MAAK,SAACC,GAAc,IAAD,EACd5D,EAAkB,OAAR4D,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAU3C,YAAI,WAAN,EAAR,EAAgBA,KAC9B4C,QAAQC,IAAI9D,GACZ,EAAK2C,SAAS,CAAE3C,eAChB,2CACL,kDAiCA,IAjCA,oEAED,WAAsB+D,GAAE,iEACP,OAAfF,QAAQC,IAAIC,GAAG,SACTN,IAAYC,IAAI,qBAAD,OAAsBK,IAAMJ,MAC/C,SAACC,GACCC,QAAQC,IAAIF,MAEd,SAACI,GACCH,QAAQC,IAAIE,MAEf,2CACF,mDAZA,IAYA,oBAsBD,WAAU,IAAD,OACP,EAA+CC,KAAKlE,MAA5CC,EAAO,EAAPA,QAASS,EAAU,EAAVA,WAAYL,EAAa,EAAbA,cAC7B,OACEyD,QAAQC,IAAI9D,GAEV,6BACE,kBAAC,IAAW,CACVkE,gBAAgB,uBAChBC,iBAAiB,OACjBC,iBAAiB,yBAGnB,kBAAC,IAAG,CAAChD,UAAU,iBACb,kBAAC,IAAG,CAACiD,GAAG,OACR,kBAAC,IAAG,CAACA,GAAG,MACN,kBAAC,IAAI,KACH,kBAAC,IAAG,CAACjD,UAAU,OACb,kBAAC,IAAG,KACF,wBAAIiD,GAAG,IAAIjD,UAAU,cAAY,yBAmBrC,kBAAC,IAAQ,KACiB,OAAvB6C,KAAKlE,MAAMC,QAAmB,KAC7B,yBAAKoB,UAAU,8CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,QACb,kBAAC,IAAoB,CAACA,UAAU,mBAC9B,kBAAC,IAAc,CAACkD,IAAI,OACjBL,KAAK/B,QACF+B,KAAKlE,MAAMG,eACX,GAAK+D,KAAKlE,MAAMI,aACf8D,KAAKlE,MAAMI,YAAc,GAAI,IAAG,IACnC,IACD8D,KAAKlE,MAAMC,QAAQuE,OAClBN,KAAKlE,MAAMG,eACT+D,KAAKlE,MAAMI,YACf,EACI8D,KAAKlE,MAAMG,eACX+D,KAAKlE,MAAMI,YACX8D,KAAKlE,MAAMC,QAAQuE,OAAQ,IAAG,MAC9BN,KAAKlE,MAAMC,QAAQuE,OACvB,kBAAC,IAAW,CAACnD,UAAU,QAAQQ,KAAM,MAEvC,kBAAC,IAAY,CAAC4C,OAAK,GACjB,kBAAC,IAAY,CACXF,IAAI,MACJxC,QAAS,kBAAM,EAAKqB,WAAW,MAAI,MAIrC,kBAAC,IAAY,CACXmB,IAAI,MACJxC,QAAS,kBAAM,EAAKqB,WAAW,MAAI,MAIrC,kBAAC,IAAY,CACXmB,IAAI,MACJxC,QAAS,kBAAM,EAAKqB,WAAW,OAAK,OAItC,kBAAC,IAAY,CACXmB,IAAI,MACJxC,QAAS,kBAAM,EAAKqB,WAAW,OAAK,UAO5C,yBAAK/B,UAAU,iDACb,yBAAKA,UAAU,oBACb,kBAAC,IAAK,CACJqD,YAAY,YACZC,SAAU,SAACC,GAAC,OACV,EAAK3B,kBAAkB2B,EAAEC,OAAOC,QAElCA,MAAOZ,KAAKlE,MAAM8E,SAGtB,yBAAKzD,UAAU,cACb,kBAAC,IAAO0D,OAAM,CACZjD,MAAM,UACNC,QAAS,kBAAM,EAAKI,QAAQ6C,oBAAkB,oBAOtD,kBAAC,IAAcC,SAAQ,MACpB,SAACC,GAAO,OACP,kBAAC,cAAW,CACVC,YAAa,GACbC,aAAa,WACb/E,cAAeA,EACfK,WAAYA,EACZT,QAASA,EACTuC,YAAa,EAAKA,YAClB6C,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZtF,mBAAoB,EAAKF,MAAME,mBAC/BuF,eAAe,SACfC,UAAuC,QAA5BR,EAAQlF,MAAM2F,yBAalD,EAvVkB,CAASC,IAAMC,WAyVrB9F","file":"static/js/164.412e5138.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from 'reactstrap'\r\nimport axiosConfig from '../../../axiosConfig'\r\nimport axios from 'axios'\r\nimport { ContextLayout } from '../../../utility/context/Layout'\r\nimport { AgGridReact } from 'ag-grid-react'\r\nimport { Eye, Edit, Trash2, ExternalLink, ChevronDown } from 'react-feather'\r\n//import classnames from \"classnames\";\r\nimport '../../../assets/scss/plugins/tables/_agGridStyleOverride.scss'\r\nimport '../../../assets/scss/pages/users.scss'\r\nimport { Route } from 'react-router-dom'\r\nimport Breadcrumbs from '../../../components/@vuexy/breadCrumbs/BreadCrumb'\r\n\r\nclass UserAskQuesList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: '',\r\n    getPageSize: '',\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: 'S.No',\r\n        valueGetter: 'node.rowIndex + 1',\r\n        field: 'node.rowIndex + 1',\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: 'Name',\r\n        field: 'fullname',\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.userid?.fullname}</span>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: 'Mobile No.',\r\n        field: 'mobile',\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.userid?.mobile}</span>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        headerName: 'DOB',\r\n        field: 'dob',\r\n        filter: true,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.userid?.dob}</span>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: 'User Question',\r\n        field: 'question',\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.question}</span>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        headerName: 'Answer For Question',\r\n        field: 'answer',\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.answer}</span>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: 'Status',\r\n        field: 'status',\r\n        filter: true,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.status}</span>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: 'Actions',\r\n        field: 'sortorder',\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/askquestion/viewAskQuestion/${params.data._id}`,\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <ExternalLink\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/askquestion/userQuestionReply/${params.data._id}`,\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows()\r\n                  this.runthisfunction(params.data._id)\r\n                  this.gridApi.updateRowData({ remove: selectedData })\r\n                }}\r\n              />\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n    ],\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // let { id } = this.props.match.params\r\n\r\n    // let userid = localStorage.getItem('userid')\r\n\r\n    let astroId = localStorage.getItem('astroId')\r\n\r\n    await axiosConfig\r\n      // .get(`/user/list_ask_qus/${astroId}/${JSON.parse(user_id)}`)\r\n      .get(`/user/list_ask_qus/${astroId}/635296f5170728df94bf4849`)\r\n\r\n      .then((response) => {\r\n        let rowData = response?.data?.data\r\n        console.log(rowData)\r\n        this.setState({ rowData })\r\n      })\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id)\r\n    await axiosConfig.get(`/user/dlt_ask_qus/${id}`).then(\r\n      (response) => {\r\n        console.log(response)\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      },\r\n    )\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api\r\n    this.gridColumnApi = params.columnApi\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    })\r\n  }\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val)\r\n  }\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val))\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <div>\r\n          <Breadcrumbs\r\n            breadCrumbTitle=\"Users  Question List\"\r\n            breadCrumbParent=\"Home\"\r\n            breadCrumbActive=\"Users  Question List\"\r\n          />\r\n\r\n          <Row className=\"app-user-list\">\r\n            <Col sm=\"12\"></Col>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <Row className=\"m-2\">\r\n                  <Col>\r\n                    <h1 sm=\"6\" className=\"float-left\">\r\n                      Users Question List\r\n                    </h1>\r\n                  </Col>\r\n                  {/* <Col>\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          className=\" btn btn-success float-right\"\r\n                          onClick={() =>\r\n                            history.push(`/app/askquestion/userQuestionReply`)\r\n                          }\r\n                        >\r\n                          Reply\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </Col> */}\r\n                </Row>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : '' * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{' '}\r\n                              -{' '}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{' '}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={'shift'}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === 'rtl'}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n}\r\nexport default UserAskQuesList\r\n"],"sourceRoot":""}