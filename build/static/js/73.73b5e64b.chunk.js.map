{"version":3,"sources":["views/apps/chat/receiverProfile.js","views/apps/chat/UserSidebar.js","views/apps/chat/Chat.js","../node_modules/react-sidebar/dist/react-sidebar.esm.js","../node_modules/@babel/runtime/helpers/objectSpread.js"],"names":["ReceiverProfile","state","activeUser","this","className","props","receiverProfile","onClick","handleReceiverSidebar","size","src","photoURL","alt","displayName","height","width","status","options","wheelPropagation","about","React","Component","UserSidebar","value","userProfile","handleUserSidebar","userImg","type","name","id","rows","maxLength","onChange","e","setState","target","length","label","color","defaultChecked","changeStatus","chat","connect","chatApp","chats","mql","window","matchMedia","Chat","sidebarDocked","matches","sidebarOpen","activeChatID","activeChat","userSidebar","handleActiveChat","user","onSetSidebarOpen","open","mediaQueryChanged","addListener","removeListener","Consumer","context","sidebar","mainSidebar","docked","touch","sidebarClassName","contentClassName","pullRight","direction","defaultStyles","position","top","left","right","bottom","overflow","zIndex","transition","WebkitTransition","willChange","overflowY","WebkitOverflowScrolling","opacity","visibility","backgroundColor","Sidebar","_Component","_this","call","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","_assertThisInitialized","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_inheritsLoose","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","saveSidebarWidth","componentDidUpdate","isTouching","ev","targetTouches","identifier","clientX","ind","touchWidth","touchSidebarWidth","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","Math","abs","offsetWidth","node","innerWidth","min","render","dragHandle","sidebarStyle","_objectSpread","styles","contentStyle","content","overlayStyle","overlay","useTouch","rootProps","rootClassName","style","root","role","rootId","hasBoxShadow","shadow","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","createElement","ref","sidebarId","overlayClassName","overlayId","contentId","children","defaultProps","defineProperty","module","exports","i","arguments","source","Object","ownKeys","keys","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","__esModule"],"mappings":"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","file":"static/js/73.73b5e64b.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nclass ReceiverProfile extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.activeUser !== state.activeUser) {\r\n      return {\r\n        activeUser: props.activeUser\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n  state = {\r\n    activeUser: null\r\n  }\r\n\r\n  render() {\r\n    const { activeUser } = this.state\r\n    return (\r\n      <div\r\n        className={`user-profile-sidebar ${this.props.receiverProfile ? \"show\" : null\r\n          }`}\r\n      >\r\n        <header className=\"user-profile-header\">\r\n          <span\r\n            className=\"close-icon\"\r\n            onClick={() => this.props.handleReceiverSidebar(\"close\")}\r\n          >\r\n            <X size={24} />\r\n          </span>\r\n          <div className=\"header-profile-sidebar\">\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={activeUser !== null ? activeUser.photoURL : null}\r\n                alt={activeUser !== null ? activeUser.displayName : null}\r\n                height=\"66\"\r\n                width=\"66\"\r\n              />\r\n              <span\r\n                className={`${activeUser !== null && activeUser.status === \"do not disturb\"\r\n                  ? \"avatar-status-busy\"\r\n                  : activeUser !== null && activeUser.status === \"away\"\r\n                    ? \"avatar-status-away\"\r\n                    : activeUser !== null && activeUser.status === \"offline\"\r\n                      ? \"avatar-status-offline\"\r\n                      : \"avatar-status-online\"\r\n                  } avatar-status-lg`}\r\n              />\r\n            </div>\r\n            <h4 className=\"chat-user-name\">\r\n              {activeUser !== null ? activeUser.displayName : null}\r\n            </h4>\r\n          </div>\r\n        </header>\r\n        <PerfectScrollbar\r\n          className=\"user-profile-sidebar-area p-2\"\r\n          options={{\r\n            wheelPropagation: false\r\n          }}\r\n        >\r\n          <h6>About</h6>\r\n          <p>{activeUser !== null ? activeUser.about : null}</p>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ReceiverProfile\r\n","import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nimport { Input } from \"reactstrap\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\"\r\nimport { changeStatus } from \"../../../redux/actions/chat/index\"\r\nimport Radio from \"../../../components/@vuexy/radio/RadioVuexy\"\r\nimport userImg from \"../../../assets/img/portrait/small/avatar-s-11.jpg\"\r\nclass UserSidebar extends React.Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.chat.status !== state.status) {\r\n      return {\r\n        status: props.chat.status\r\n      }\r\n    }\r\n    // Return null if the state hasn't changed\r\n    return null\r\n  }\r\n\r\n  state = {\r\n    value:\r\n      \"Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.\",\r\n    status: null\r\n  }\r\n\r\n  render() {\r\n    const status = this.state.status\r\n    return (\r\n      <div\r\n        className={`chat-profile-sidebar ${this.props.userProfile ? \"show\" : null\r\n          }`}\r\n      >\r\n        <header className=\"chat-profile-header\">\r\n          <div\r\n            className=\"close-icon\"\r\n            onClick={() => this.props.handleUserSidebar(\"close\")}\r\n          >\r\n            <X size={24} />\r\n          </div>\r\n          <div className=\"header-profile-sidebar\">\r\n            <div className=\"avatar\">\r\n              <img src={userImg} alt=\"User Profile\" height=\"66\" width=\"66\" />\r\n              <span\r\n                className={`${status === \"offline\"\r\n                  ? \"avatar-status-offline\"\r\n                  : status === \"dnd\"\r\n                    ? \"avatar-status-busy\"\r\n                    : status === \"away\"\r\n                      ? \"avatar-status-away\"\r\n                      : \"avatar-status-online\"\r\n                  } avatar-status-lg`}\r\n              />\r\n            </div>\r\n            <h4 className=\"chat-user-name\">John Doe</h4>\r\n          </div>\r\n        </header>\r\n        <div className=\"profile-sidebar-area\">\r\n          <PerfectScrollbar\r\n            className=\"scroll-area\"\r\n            options={{\r\n              wheelPropagation: false\r\n            }}\r\n          >\r\n            <h6>About</h6>\r\n            <div className=\"about-user\">\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"text\"\r\n                id=\"userAbout\"\r\n                rows=\"5\"\r\n                value={this.state.value}\r\n                maxLength=\"120\"\r\n                onChange={e => this.setState({ value: e.target.value })}\r\n              />\r\n              <small className=\"counter-value float-right\">\r\n                {`${this.state.value.length} / 120`}\r\n              </small>\r\n            </div>\r\n            <h3 className=\"mt-3\">Status</h3>\r\n            <ul className=\"list-unstyled user-status mb-0\">\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Active\"\r\n                  color=\"success\"\r\n                  defaultChecked={true}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"active\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Do Not Disturb\"\r\n                  color=\"danger\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"dnd\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Away\"\r\n                  color=\"warning\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"away\")}\r\n                />\r\n              </li>\r\n              <li className=\"pb-50\">\r\n                <Radio\r\n                  label=\"Offline\"\r\n                  color=\"secondary\"\r\n                  defaultChecked={false}\r\n                  name=\"userStatus\"\r\n                  onClick={() => this.props.changeStatus(\"offline\")}\r\n                />\r\n              </li>\r\n            </ul>\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chat: state.chatApp.chats\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { changeStatus })(UserSidebar)\r\n","import React from \"react\"\r\nimport Sidebar from \"react-sidebar\"\r\nimport { ContextLayout } from \"../../../utility/context/Layout\"\r\nimport ChatSidebarContent from \"./ChatSidebar\"\r\nimport ChatLog from \"./ChatLog\"\r\nimport ReceiverSidebar from \"./receiverProfile\"\r\nimport UserSidebar from \"./UserSidebar\"\r\nimport \"../../../assets/scss/pages/app-chat.scss\"\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass Chat extends React.Component {\r\n  state = {\r\n    userProfile: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false,\r\n    activeChatID: null,\r\n    activeChat: null,\r\n    activeUser: null,\r\n    receiverProfile: false,\r\n    userSidebar: false\r\n  }\r\n  // mounted = false\r\n  handleUserSidebar = status => {\r\n    if (status === \"open\") {\r\n      this.setState({\r\n        userProfile: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        userProfile: false\r\n      })\r\n    }\r\n  }\r\n  handleActiveChat = (id, user, chats) => {\r\n    this.setState({\r\n      activeChatID: id,\r\n      activeUser: user,\r\n      activeChat: chats\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  onSetSidebarOpen = open => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleReceiverSidebar = status => {\r\n    status === \"open\"\r\n      ? this.setState({\r\n        receiverProfile: true\r\n      })\r\n      : this.setState({\r\n        receiverProfile: false\r\n      })\r\n  }\r\n\r\n  handleUserSidebar = status => {\r\n    status === \"open\"\r\n      ? this.setState({\r\n        userSidebar: true\r\n      })\r\n      : this.setState({\r\n        userSidebar: false\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat-application position-relative\">\r\n        <div\r\n          className={`chat-overlay ${this.state.receiverProfile ||\r\n            this.state.userSidebar ||\r\n            this.state.sidebarOpen\r\n            ? \"show\"\r\n            : \"d-none\"\r\n            }`}\r\n          onClick={() => {\r\n            this.handleReceiverSidebar(\"close\")\r\n            this.handleUserSidebar(\"close\")\r\n            this.onSetSidebarOpen(false)\r\n          }}\r\n        />\r\n        <ContextLayout.Consumer>\r\n          {context => (\r\n            <Sidebar\r\n              sidebar={\r\n                <ChatSidebarContent\r\n                  activeChatID={this.state.activeChatID}\r\n                  handleActiveChat={this.handleActiveChat}\r\n                  handleUserSidebar={this.handleUserSidebar}\r\n                  mainSidebar={this.onSetSidebarOpen}\r\n                />\r\n              }\r\n              docked={this.state.sidebarDocked}\r\n              open={this.state.sidebarOpen}\r\n              touch={false}\r\n              sidebarClassName=\"chat-sidebar\"\r\n              contentClassName=\"sidebar-children d-none\"\r\n              pullRight={context.state.direction === \"rtl\"}>\r\n              \"\"\r\n            </Sidebar>\r\n          )}\r\n        </ContextLayout.Consumer>\r\n        <UserSidebar\r\n          userProfile={this.state.userSidebar}\r\n          handleUserSidebar={this.handleUserSidebar}\r\n        />\r\n        <ChatLog\r\n          activeChat={this.state.activeChat}\r\n          activeUser={this.state.activeUser}\r\n          handleReceiverSidebar={this.handleReceiverSidebar}\r\n          mainSidebar={this.onSetSidebarOpen}\r\n          mql={mql}\r\n          handleActiveChat={this.handleActiveChat}\r\n        />\r\n        <ReceiverSidebar\r\n          activeUser={this.state.activeUser}\r\n          receiverProfile={this.state.receiverProfile}\r\n          handleReceiverSidebar={this.handleReceiverSidebar}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chat\r\n","import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n","var defineProperty = require(\"./defineProperty.js\");\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nmodule.exports = _objectSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}